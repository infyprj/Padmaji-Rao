I have used the following code files. In the product-detail.component.ts at every situation I have the undefines and null while I am getting the param id from the url. I had used to this url :http://localhost:4200/product/1  but I got undefined and null in the browsers console.
What is the issue ? Hoe got extract the 1 from url


//app.module.ts
import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
import { HttpClientModule, HttpClient, HttpHeaders } from '@angular/common/http';


import { AppComponent } from './app.component';
import { FormsModule } from '@angular/forms';
import { routing } from './app.routing';
import { ProductDetailComponent } from './product-detail/product-detail.component';
import { ProductService } from './services/product-service/product.service';


@NgModule({
  declarations: [
    AppComponent,
    ProductDetailComponent,
    
    
  ],
  imports: [
    BrowserModule, HttpClientModule, FormsModule, routing
  ],
  providers: [ProductService],
  bootstrap: [AppComponent],
  //schemas: [CUSTOM_ELEMENTS_SCHEMA]
})
export class AppModule { }



//app.component.html
<div style="text-align:center">
  <app-product-detail></app-product-detail>
</div>

//app.routing.ts
import { RouterModule, Routes } from '@angular/router';
import { ModuleWithProviders } from '@angular/core';
import { ProductDetailComponent } from './product-detail/product-detail.component';

const routes: Routes = [
  { path: 'product/:id', component: ProductDetailComponent }
]

export const routing: ModuleWithProviders<RouterModule> = RouterModule.forRoot(routes)



//product-detail.component.ts
import { Component, OnInit } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { IProduct } from '../interfaces/product';
import { ProductService } from '../services/product-service/product.service';

interface ProductImage {
  imageId: number;
  productId: number;
  imageUrl: string;
}

@Component({
  selector: 'app-product-detail',
  templateUrl: './product-detail.component.html',
  styleUrls: ['./product-detail.component.css']
})
export class ProductDetailComponent implements OnInit {
  product: IProduct | undefined;
  productImages: ProductImage[] = [];
  loading: boolean = true;
  errorMsg: string = '';
  activeImageUrl: string = '';
  quantity: number = 1;
  productId: number = 0;


  constructor(
    private route: ActivatedRoute,
    private router: Router,
    private _productService: ProductService
  ) { }

  ngOnInit(): void {
    console.log("In ngOnInit");
    this.route.params.subscribe(param => this.productId = param['productId']);
    console.log(this.productId);

    // First approach: Using snapshot
    const idParam = this.route.snapshot.params['id'];
    console.log("ID from snapshot:", idParam);

    // Second approach: Using paramMap observable
    this.route.paramMap.subscribe(params => {
      console.log("ID from paramMap observable:", params.get('id'));
      const id = Number(params.get('id'));
      this.productId = id;

      if (id) {
        this.getProductDetails(id);
        this.getProductImages(id);
      } else {
        this.errorMsg = 'Invalid product ID';
        this.loading = false;
      }
    });
  }

  getProductDetails(id: number) {
    console.log("Fetching product details for ID:", id);
    this._productService.getProductById(id).subscribe(
      responseProductData => {
        console.log("Product data received:", responseProductData);
        this.product = responseProductData;
        if (this.product) {
          this.activeImageUrl = this.product.thumbnailUrl;
        }
        this.loading = false;
      },
      responseProductError => {
        this.errorMsg = responseProductError;
        this.loading = false;
        console.error("Error fetching product:", this.errorMsg);
      },
      () => { console.log('GetProductDetails method executed successfully'); }
    );
  }

  getProductImages(id: number) {
    console.log("Fetching product images for ID:", id);
    this._productService.getProductImages(id).subscribe(
      (responseImagesData: any) => {
        console.log("Product images received:", responseImagesData);
        this.productImages = responseImagesData;
      },
      responseImagesError => {
        this.errorMsg = responseImagesError;
        console.error("Error fetching images:", this.errorMsg);
      },
      () => { console.log('GetProductImages method executed successfully'); }
    );
  }

  setActiveImage(imageUrl: string) {
    this.activeImageUrl = imageUrl;
  }

  incrementQuantity() {
    if (this.product && this.quantity < this.product.quantity) {
      this.quantity++;
    }
  }

  decrementQuantity() {
    if (this.quantity > 1) {
      this.quantity--;
    }
  }

  addToCart() {
    if (this.product) {
      alert(`${this.quantity} item(s) of ${this.product.name} added to cart!`);
      // Here you would implement the actual cart functionality
    }
  }
}



//product-detail.component.html
<div class="container mt-5" *ngIf="loading">
  <div class="row">
    <div class="col-12 text-center">
      <div class="spinner-border text-primary" role="status">
        <span class="visually-hidden">Loading...</span>
      </div>
    </div>
  </div>
</div>

<div class="container mt-5" *ngIf="!loading && product">
  <div class="row">
    <!-- Product Images Section -->
    <div class="col-md-6">
      <div class="product-image-container mb-3">
        <img [src]="activeImageUrl" class="img-fluid main-product-image" alt="{{ product.name }}">
      </div>

      <div class="product-thumbnails d-flex flex-wrap">
        <!-- Main thumbnail -->
        <div class="thumbnail-item me-2 mb-2" (click)="setActiveImage(product.thumbnailUrl)">
          <img [src]="product.thumbnailUrl" class="img-thumbnail"
               [ngClass]="{'active-thumbnail': activeImageUrl === product.thumbnailUrl}"
               alt="{{ product.name }} main image">
        </div>

        <!-- Additional images -->
        <div class="thumbnail-item me-2 mb-2" *ngFor="let image of productImages" (click)="setActiveImage(image.imageUrl)">
          <img [src]="image.imageUrl" class="img-thumbnail"
               [ngClass]="{'active-thumbnail': activeImageUrl === image.imageUrl}"
               alt="{{ product.name }} image">
        </div>
      </div>
    </div>

    <!-- Product Details Section -->
    <div class="col-md-6">
      <h1 class="product-title">{{ product.name }}</h1>
      <div class="product-rating mb-3">
        <i class="fa fa-star"></i>
        <i class="fa fa-star"></i>
        <i class="fa fa-star"></i>
        <i class="fa fa-star"></i>
        <i class="fa fa-star-half-o"></i>
        <span class="ms-2">(4.5/5)</span>
      </div>

      <div class="product-price mb-3">
        <h3>â‚¹{{ product.price.toLocaleString() }}</h3>
        <span class="text-success">In Stock ({{ product.quantity }} available)</span>
      </div>

      <div class="product-description mb-4">
        <h4>Description</h4>
        <p>{{ product.description }}</p>
      </div>

      <div class="product-specs mb-4">
        <h4>Specifications</h4>
        <ul class="list-group">
          <li class="list-group-item">
            <strong>Category:</strong> {{ product.categoryId === 1 ? 'Furniture' : 'Other' }}
          </li>
          <li class="list-group-item">
            <strong>Product ID:</strong> {{ product.productId }}
          </li>
          <!-- Add more specifications as needed -->
        </ul>
      </div>

      <div class="quantity-selector d-flex align-items-center mb-4">
        <h4 class="me-3 mb-0">Quantity:</h4>
        <div class="input-group" style="width: 150px;">
          <button class="btn btn-outline-secondary" type="button" (click)="decrementQuantity()">
            <i class="fa fa-minus"></i>
          </button>
          <input type="text" class="form-control text-center" [value]="quantity" readonly>
          <button class="btn btn-outline-secondary" type="button" (click)="incrementQuantity()">
            <i class="fa fa-plus"></i>
          </button>
        </div>
      </div>

      <div class="product-actions">
        <button class="btn btn-primary btn-lg me-2" (click)="addToCart()">
          <i class="fa fa-shopping-cart me-2"></i>Add to Cart
        </button>
        <button class="btn btn-outline-secondary btn-lg">
          <i class="fa fa-heart me-2"></i>Add to Wishlist
        </button>
      </div>
    </div>
  </div>

  <!-- Product Details Tabs -->
  <div class="row mt-5">
    <div class="col-12">
      <ul class="nav nav-tabs" id="productTabs" role="tablist">
        <li class="nav-item" role="presentation">
          <button class="nav-link active" id="details-tab" data-bs-toggle="tab" data-bs-target="#details" type="button" role="tab" aria-controls="details" aria-selected="true">Details</button>
        </li>
        <li class="nav-item" role="presentation">
          <button class="nav-link" id="reviews-tab" data-bs-toggle="tab" data-bs-target="#reviews" type="button" role="tab" aria-controls="reviews" aria-selected="false">Reviews</button>
        </li>
        <li class="nav-item" role="presentation">
          <button class="nav-link" id="shipping-tab" data-bs-toggle="tab" data-bs-target="#shipping" type="button" role="tab" aria-controls="shipping" aria-selected="false">Shipping & Returns</button>
        </li>
      </ul>
      <div class="tab-content p-4 border border-top-0 rounded-bottom" id="productTabsContent">
        <div class="tab-pane fade show active" id="details" role="tabpanel" aria-labelledby="details-tab">
          <h4>Product Details</h4>
          <p>{{ product.description }}</p>
          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla facilisi. Sed euismod, nisl vel ultricies lacinia, nisl nisl aliquam nisl, eget aliquam nisl nisl sit amet nisl. Sed euismod, nisl vel ultricies lacinia, nisl nisl aliquam nisl, eget aliquam nisl nisl sit amet nisl.</p>
        </div>
        <div class="tab-pane fade" id="reviews" role="tabpanel" aria-labelledby="reviews-tab">
          <h4>Customer Reviews</h4>
          <div class="review-item mb-3 pb-3 border-bottom">
            <div class="d-flex align-items-center mb-2">
              <strong class="me-2">John Doe</strong>
              <div class="product-rating">
                <i class="fa fa-star"></i>
                <i class="fa fa-star"></i>
                <i class="fa fa-star"></i>
                <i class="fa fa-star"></i>
                <i class="fa fa-star"></i>
              </div>
            </div>
            <p>Great product! Very comfortable and looks exactly as pictured.</p>
          </div>
          <div class="review-item">
            <div class="d-flex align-items-center mb-2">
              <strong class="me-2">Jane Smith</strong>
              <div class="product-rating">
                <i class="fa fa-star"></i>
                <i class="fa fa-star"></i>
                <i class="fa fa-star"></i>
                <i class="fa fa-star"></i>
                <i class="fa fa-star-o"></i>
              </div>
            </div>
            <p>Good quality for the price. Delivery was quick and assembly was easy.</p>
          </div>
        </div>
        <div class="tab-pane fade" id="shipping" role="tabpanel" aria-labelledby="shipping-tab">
          <h4>Shipping Information</h4>
          <p>We offer free shipping on all orders over â‚¹10,000. Standard delivery takes 3-5 business days.</p>
          <h4>Return Policy</h4>
          <p>If you're not completely satisfied with your purchase, you can return it within 30 days for a full refund or exchange.</p>
        </div>
      </div>
    </div>
  </div>

  <!-- Related Products -->
  <div class="row mt-5">
    <div class="col-12">
      <h3 class="mb-4">You May Also Like</h3>
      <div class="row">
        <!-- This would be populated with actual related products -->
        <div class="col-md-3 mb-4">
          <div class="card">
            <img src="https://shop3dprojectaccount.blob.core.windows.net/images/Sofa1.png" class="card-img-top" alt="Related Product">
            <div class="card-body">
              <h5 class="card-title">Similar Sofa</h5>
              <p class="card-text">â‚¹14,500</p>
              <button class="btn btn-sm btn-outline-primary">View Details</button>
            </div>
          </div>
        </div>
        <!-- More related products would go here -->
      </div>
    </div>
  </div>
</div>

<!-- Error message display -->
<div class="container mt-5" *ngIf="!loading && !product">
  <div class="alert alert-danger" role="alert">
    <h4 class="alert-heading">Product Not Found!</h4>
    <p>Sorry, we couldn't find the product you're looking for. {{ errorMsg }}</p>
    <hr>
    <p class="mb-0">Please try again or browse our other products.</p>
  </div>
</div>

